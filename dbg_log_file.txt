
25
count of char = 25

(((12)*(x))/((12)-(x)))

sizeOfFile = <25>


Reader:
(((12)*(x))/((12)-(x)))
^________________________
0123456789

scanf:
first bracket = <(>
ID -> 1

Reader:
(((12)*(x))/((12)-(x)))
_^_______________________
0123456789

scanf:
nsymbols = 0
offset = 0
<>
ID -> 1

Reader:
(((12)*(x))/((12)-(x)))
_^_______________________
0123456789

scanf:
second bracket in func = <(>
ID -> 2
ID -> 1

Reader:
(((12)*(x))/((12)-(x)))
_^_______________________
0123456789

scanf:
first bracket = <(>
ID -> 2

Reader:
(((12)*(x))/((12)-(x)))
__^______________________
0123456789

scanf:
nsymbols = 0
offset = 0
<>
ID -> 2

Reader:
(((12)*(x))/((12)-(x)))
__^______________________
0123456789

scanf:
second bracket in func = <(>
ID -> 3
ID -> 2

Reader:
(((12)*(x))/((12)-(x)))
__^______________________
0123456789

scanf:
first bracket = <(>
ID -> 3

Reader:
(((12)*(x))/((12)-(x)))
___^_____________________
0123456789

scanf:
nsymbols = 1
offset = 2
<12>
ID -> 5

Reader:
(((12)*(x))/((12)-(x)))
_____^___________________
0123456789

scanf:
second bracket in func = <)>
ID -> 6
In NodeType value = 12
return


Reader:
(((12)*(x))/((12)-(x)))
______^__________________
0123456789

scanf:
main value = <*>
ID -> 7
In NodeType value = 42

Reader:
(((12)*(x))/((12)-(x)))
_______^_________________
0123456789

scanf:
third bracket in func = <(>
ID -> 8
ID -> 7

Reader:
(((12)*(x))/((12)-(x)))
_______^_________________
0123456789

scanf:
first bracket = <(>
ID -> 8

Reader:
(((12)*(x))/((12)-(x)))
________^________________
0123456789

scanf:
nsymbols = 1
offset = 1
<x>
ID -> 9

Reader:
(((12)*(x))/((12)-(x)))
_________^_______________
0123456789

scanf:
second bracket in func = <)>
ID -> 10
In NodeType value = 120
return


Reader:
(((12)*(x))/((12)-(x)))
__________^______________
0123456789

scanf:
end bracket = <)>
ID -> 11

Reader:
(((12)*(x))/((12)-(x)))
___________^_____________
0123456789

scanf:
main value = </>
ID -> 12
In NodeType value = 47

Reader:
(((12)*(x))/((12)-(x)))
____________^____________
0123456789

scanf:
third bracket in func = <(>
ID -> 13
ID -> 12

Reader:
(((12)*(x))/((12)-(x)))
____________^____________
0123456789

scanf:
first bracket = <(>
ID -> 13

Reader:
(((12)*(x))/((12)-(x)))
_____________^___________
0123456789

scanf:
nsymbols = 0
offset = 0
<>
ID -> 13

Reader:
(((12)*(x))/((12)-(x)))
_____________^___________
0123456789

scanf:
second bracket in func = <(>
ID -> 14
ID -> 13

Reader:
(((12)*(x))/((12)-(x)))
_____________^___________
0123456789

scanf:
first bracket = <(>
ID -> 14

Reader:
(((12)*(x))/((12)-(x)))
______________^__________
0123456789

scanf:
nsymbols = 1
offset = 2
<12>
ID -> 16

Reader:
(((12)*(x))/((12)-(x)))
________________^________
0123456789

scanf:
second bracket in func = <)>
ID -> 17
In NodeType value = 12
return


Reader:
(((12)*(x))/((12)-(x)))
_________________^_______
0123456789

scanf:
main value = <->
ID -> 18
In NodeType value = 45

Reader:
(((12)*(x))/((12)-(x)))
__________________^______
0123456789

scanf:
third bracket in func = <(>
ID -> 19
ID -> 18

Reader:
(((12)*(x))/((12)-(x)))
__________________^______
0123456789

scanf:
first bracket = <(>
ID -> 19

Reader:
(((12)*(x))/((12)-(x)))
___________________^_____
0123456789

scanf:
nsymbols = 1
offset = 1
<x>
ID -> 20

Reader:
(((12)*(x))/((12)-(x)))
____________________^____
0123456789

scanf:
second bracket in func = <)>
ID -> 21
In NodeType value = 120
return


Reader:
(((12)*(x))/((12)-(x)))
_____________________^___
0123456789

scanf:
end bracket = <)>
ID -> 22

Reader:
(((12)*(x))/((12)-(x)))
______________________^__
0123456789

scanf:
end bracket = <)>
ID -> 23
\frac{12*x}{12-x}\frac{0*x+12*1*12-x-12*x*0-1}{12-x*12-x}